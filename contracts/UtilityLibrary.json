{
  "contractName": "UtilityLibrary",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/lib/UtilityLibrary.sol\":\"UtilityLibrary\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/lib/UtilityLibrary.sol\":{\"keccak256\":\"0xd8f831bf551a397a62a09a9e1a7fad63eb59d4258376494a03e88c1ec2954b3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa7377ce96a3632e89844e903301121dffca9c6ba7841cdf656bb660332d4d10\",\"dweb:/ipfs/QmRwXPoPbkUHs139JMD1MUL89H9PxJcSoz5vNUkdvSuvod\"]}},\"version\":1}",
  "bytecode": "0x6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220eeb303cc12089229d6545e5968afcd80ac10ad5af8bafb30b9ef532c0f83a88b64736f6c63430008140033",
  "deployedBytecode": "0x730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220eeb303cc12089229d6545e5968afcd80ac10ad5af8bafb30b9ef532c0f83a88b64736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "61:191:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "61:191:3:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nlibrary UtilityLibrary {\r\n    function abs(int _input) internal pure returns (int) {\r\n        if (_input < 0) {\r\n            return _input * -1;\r\n        }\r\n\r\n        return _input;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\dtvthe\\study\\blockchain\\fx15127-final-project\\truffle\\contracts\\lib\\UtilityLibrary.sol",
  "ast": {
    "absolutePath": "project:/contracts/lib/UtilityLibrary.sol",
    "exportedSymbols": {
      "UtilityLibrary": [
        968
      ]
    },
    "id": 969,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 947,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:3"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "UtilityLibrary",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 968,
        "linearizedBaseContracts": [
          968
        ],
        "name": "UtilityLibrary",
        "nameLocation": "69:14:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 966,
              "nodeType": "Block",
              "src": "144:105:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 954,
                      "name": "_input",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 949,
                      "src": "159:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 955,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "168:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "159:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 963,
                  "nodeType": "IfStatement",
                  "src": "155:61:3",
                  "trueBody": {
                    "id": 962,
                    "nodeType": "Block",
                    "src": "171:45:3",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 957,
                            "name": "_input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 949,
                            "src": "193:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "-",
                            "prefix": true,
                            "src": "202:2:3",
                            "subExpression": {
                              "hexValue": "31",
                              "id": 958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "203:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_minus_1_by_1",
                              "typeString": "int_const -1"
                            }
                          },
                          "src": "193:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "functionReturnParameters": 953,
                        "id": 961,
                        "nodeType": "Return",
                        "src": "186:18:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 964,
                    "name": "_input",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 949,
                    "src": "235:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 953,
                  "id": 965,
                  "nodeType": "Return",
                  "src": "228:13:3"
                }
              ]
            },
            "id": 967,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "abs",
            "nameLocation": "100:3:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "_input",
                  "nameLocation": "108:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "104:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "104:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "103:12:3"
            },
            "returnParameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 952,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 967,
                  "src": "139:3:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 951,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "139:3:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "138:5:3"
            },
            "scope": 968,
            "src": "91:158:3",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 969,
        "src": "61:191:3",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "33:221:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-06-17T23:07:11.015Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}